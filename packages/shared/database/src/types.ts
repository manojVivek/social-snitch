/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/notification_platform": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification_platform.id"];
          created_at?: parameters["rowFilter.notification_platform.created_at"];
          updated_at?: parameters["rowFilter.notification_platform.updated_at"];
          name?: parameters["rowFilter.notification_platform.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["notification_platform"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** notification_platform */
          notification_platform?: definitions["notification_platform"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification_platform.id"];
          created_at?: parameters["rowFilter.notification_platform.created_at"];
          updated_at?: parameters["rowFilter.notification_platform.updated_at"];
          name?: parameters["rowFilter.notification_platform.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification_platform.id"];
          created_at?: parameters["rowFilter.notification_platform.created_at"];
          updated_at?: parameters["rowFilter.notification_platform.updated_at"];
          name?: parameters["rowFilter.notification_platform.name"];
        };
        body: {
          /** notification_platform */
          notification_platform?: definitions["notification_platform"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/notification": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification.id"];
          created_at?: parameters["rowFilter.notification.created_at"];
          updated_at?: parameters["rowFilter.notification.updated_at"];
          content?: parameters["rowFilter.notification.content"];
          status?: parameters["rowFilter.notification.status"];
          notification_config_id?: parameters["rowFilter.notification.notification_config_id"];
          keyword?: parameters["rowFilter.notification.keyword"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["notification"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** notification */
          notification?: definitions["notification"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification.id"];
          created_at?: parameters["rowFilter.notification.created_at"];
          updated_at?: parameters["rowFilter.notification.updated_at"];
          content?: parameters["rowFilter.notification.content"];
          status?: parameters["rowFilter.notification.status"];
          notification_config_id?: parameters["rowFilter.notification.notification_config_id"];
          keyword?: parameters["rowFilter.notification.keyword"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification.id"];
          created_at?: parameters["rowFilter.notification.created_at"];
          updated_at?: parameters["rowFilter.notification.updated_at"];
          content?: parameters["rowFilter.notification.content"];
          status?: parameters["rowFilter.notification.status"];
          notification_config_id?: parameters["rowFilter.notification.notification_config_id"];
          keyword?: parameters["rowFilter.notification.keyword"];
        };
        body: {
          /** notification */
          notification?: definitions["notification"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subscription_config": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription_config.id"];
          created_at?: parameters["rowFilter.subscription_config.created_at"];
          updated_at?: parameters["rowFilter.subscription_config.updated_at"];
          subscription_id?: parameters["rowFilter.subscription_config.subscription_id"];
          watch_config_id?: parameters["rowFilter.subscription_config.watch_config_id"];
          /** Reference to the notification config */
          notification_config_id?: parameters["rowFilter.subscription_config.notification_config_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscription_config"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscription_config */
          subscription_config?: definitions["subscription_config"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription_config.id"];
          created_at?: parameters["rowFilter.subscription_config.created_at"];
          updated_at?: parameters["rowFilter.subscription_config.updated_at"];
          subscription_id?: parameters["rowFilter.subscription_config.subscription_id"];
          watch_config_id?: parameters["rowFilter.subscription_config.watch_config_id"];
          /** Reference to the notification config */
          notification_config_id?: parameters["rowFilter.subscription_config.notification_config_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription_config.id"];
          created_at?: parameters["rowFilter.subscription_config.created_at"];
          updated_at?: parameters["rowFilter.subscription_config.updated_at"];
          subscription_id?: parameters["rowFilter.subscription_config.subscription_id"];
          watch_config_id?: parameters["rowFilter.subscription_config.watch_config_id"];
          /** Reference to the notification config */
          notification_config_id?: parameters["rowFilter.subscription_config.notification_config_id"];
        };
        body: {
          /** subscription_config */
          subscription_config?: definitions["subscription_config"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/notification_config": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification_config.id"];
          created_at?: parameters["rowFilter.notification_config.created_at"];
          updated_at?: parameters["rowFilter.notification_config.updated_at"];
          user_id?: parameters["rowFilter.notification_config.user_id"];
          notification_platform_id?: parameters["rowFilter.notification_config.notification_platform_id"];
          discord_channel_id?: parameters["rowFilter.notification_config.discord_channel_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["notification_config"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** notification_config */
          notification_config?: definitions["notification_config"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification_config.id"];
          created_at?: parameters["rowFilter.notification_config.created_at"];
          updated_at?: parameters["rowFilter.notification_config.updated_at"];
          user_id?: parameters["rowFilter.notification_config.user_id"];
          notification_platform_id?: parameters["rowFilter.notification_config.notification_platform_id"];
          discord_channel_id?: parameters["rowFilter.notification_config.discord_channel_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notification_config.id"];
          created_at?: parameters["rowFilter.notification_config.created_at"];
          updated_at?: parameters["rowFilter.notification_config.updated_at"];
          user_id?: parameters["rowFilter.notification_config.user_id"];
          notification_platform_id?: parameters["rowFilter.notification_config.notification_platform_id"];
          discord_channel_id?: parameters["rowFilter.notification_config.discord_channel_id"];
        };
        body: {
          /** notification_config */
          notification_config?: definitions["notification_config"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/watch_config": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.watch_config.id"];
          created_at?: parameters["rowFilter.watch_config.created_at"];
          updated_at?: parameters["rowFilter.watch_config.updated_at"];
          keyword?: parameters["rowFilter.watch_config.keyword"];
          social_platform_id?: parameters["rowFilter.watch_config.social_platform_id"];
          last_run_at?: parameters["rowFilter.watch_config.last_run_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["watch_config"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** watch_config */
          watch_config?: definitions["watch_config"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.watch_config.id"];
          created_at?: parameters["rowFilter.watch_config.created_at"];
          updated_at?: parameters["rowFilter.watch_config.updated_at"];
          keyword?: parameters["rowFilter.watch_config.keyword"];
          social_platform_id?: parameters["rowFilter.watch_config.social_platform_id"];
          last_run_at?: parameters["rowFilter.watch_config.last_run_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.watch_config.id"];
          created_at?: parameters["rowFilter.watch_config.created_at"];
          updated_at?: parameters["rowFilter.watch_config.updated_at"];
          keyword?: parameters["rowFilter.watch_config.keyword"];
          social_platform_id?: parameters["rowFilter.watch_config.social_platform_id"];
          last_run_at?: parameters["rowFilter.watch_config.last_run_at"];
        };
        body: {
          /** watch_config */
          watch_config?: definitions["watch_config"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subscription": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription.id"];
          created_at?: parameters["rowFilter.subscription.created_at"];
          updated_at?: parameters["rowFilter.subscription.updated_at"];
          user_id?: parameters["rowFilter.subscription.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscription"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscription */
          subscription?: definitions["subscription"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription.id"];
          created_at?: parameters["rowFilter.subscription.created_at"];
          updated_at?: parameters["rowFilter.subscription.updated_at"];
          user_id?: parameters["rowFilter.subscription.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription.id"];
          created_at?: parameters["rowFilter.subscription.created_at"];
          updated_at?: parameters["rowFilter.subscription.updated_at"];
          user_id?: parameters["rowFilter.subscription.user_id"];
        };
        body: {
          /** subscription */
          subscription?: definitions["subscription"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user.id"];
          username?: parameters["rowFilter.user.username"];
          created_at?: parameters["rowFilter.user.created_at"];
          updated_at?: parameters["rowFilter.user.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user */
          user?: definitions["user"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user.id"];
          username?: parameters["rowFilter.user.username"];
          created_at?: parameters["rowFilter.user.created_at"];
          updated_at?: parameters["rowFilter.user.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user.id"];
          username?: parameters["rowFilter.user.username"];
          created_at?: parameters["rowFilter.user.created_at"];
          updated_at?: parameters["rowFilter.user.updated_at"];
        };
        body: {
          /** user */
          user?: definitions["user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/social_platform": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.social_platform.id"];
          created_at?: parameters["rowFilter.social_platform.created_at"];
          updated_at?: parameters["rowFilter.social_platform.updated_at"];
          name?: parameters["rowFilter.social_platform.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["social_platform"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** social_platform */
          social_platform?: definitions["social_platform"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.social_platform.id"];
          created_at?: parameters["rowFilter.social_platform.created_at"];
          updated_at?: parameters["rowFilter.social_platform.updated_at"];
          name?: parameters["rowFilter.social_platform.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.social_platform.id"];
          created_at?: parameters["rowFilter.social_platform.created_at"];
          updated_at?: parameters["rowFilter.social_platform.updated_at"];
          name?: parameters["rowFilter.social_platform.name"];
        };
        body: {
          /** social_platform */
          social_platform?: definitions["social_platform"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  notification_platform: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    name?: string;
  };
  /** @description Notifications for the subscriptions */
  notification: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    content?: string;
    /** Format: character varying */
    status?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `notification_config.id`.<fk table='notification_config' column='id'/>
     */
    notification_config_id?: number;
    /**
     * Format: character varying
     * @default
     */
    keyword?: string;
  };
  /** @description Alert config mapping for subscription. */
  subscription_config: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `subscription.id`.<fk table='subscription' column='id'/>
     */
    subscription_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `watch_config.id`.<fk table='watch_config' column='id'/>
     */
    watch_config_id?: number;
    /**
     * Format: bigint
     * @description Reference to the notification config
     *
     * Note:
     * This is a Foreign Key to `notification_config.id`.<fk table='notification_config' column='id'/>
     */
    notification_config_id?: number;
  };
  /** @description Details of various notification for a user */
  notification_config: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `user.id`.<fk table='user' column='id'/>
     */
    user_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `notification_platform.id`.<fk table='notification_platform' column='id'/>
     */
    notification_platform_id?: number;
    /** Format: character varying */
    discord_channel_id?: string;
  };
  /** @description Watcher parameters. */
  watch_config: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    keyword?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `social_platform.id`.<fk table='social_platform' column='id'/>
     */
    social_platform_id?: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    last_run_at?: string;
  };
  /** @description Contains all monitoring subscriptions */
  subscription: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `user.id`.<fk table='user' column='id'/>
     */
    user_id: number;
  };
  /** @description User accounts */
  user: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    username: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
  };
  /** @description Available Social Media platforms */
  social_platform: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    name?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferPost:
    | "return=representation"
    | "return=minimal"
    | "return=none"
    | "resolution=ignore-duplicates"
    | "resolution=merge-duplicates";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description notification_platform */
  "body.notification_platform": definitions["notification_platform"];
  "rowFilter.notification_platform.id": string;
  "rowFilter.notification_platform.created_at": string;
  "rowFilter.notification_platform.updated_at": string;
  "rowFilter.notification_platform.name": string;
  /** @description notification */
  "body.notification": definitions["notification"];
  "rowFilter.notification.id": string;
  "rowFilter.notification.created_at": string;
  "rowFilter.notification.updated_at": string;
  "rowFilter.notification.content": string;
  "rowFilter.notification.status": string;
  "rowFilter.notification.notification_config_id": string;
  "rowFilter.notification.keyword": string;
  /** @description subscription_config */
  "body.subscription_config": definitions["subscription_config"];
  "rowFilter.subscription_config.id": string;
  "rowFilter.subscription_config.created_at": string;
  "rowFilter.subscription_config.updated_at": string;
  "rowFilter.subscription_config.subscription_id": string;
  "rowFilter.subscription_config.watch_config_id": string;
  /** @description Reference to the notification config */
  "rowFilter.subscription_config.notification_config_id": string;
  /** @description notification_config */
  "body.notification_config": definitions["notification_config"];
  "rowFilter.notification_config.id": string;
  "rowFilter.notification_config.created_at": string;
  "rowFilter.notification_config.updated_at": string;
  "rowFilter.notification_config.user_id": string;
  "rowFilter.notification_config.notification_platform_id": string;
  "rowFilter.notification_config.discord_channel_id": string;
  /** @description watch_config */
  "body.watch_config": definitions["watch_config"];
  "rowFilter.watch_config.id": string;
  "rowFilter.watch_config.created_at": string;
  "rowFilter.watch_config.updated_at": string;
  "rowFilter.watch_config.keyword": string;
  "rowFilter.watch_config.social_platform_id": string;
  "rowFilter.watch_config.last_run_at": string;
  /** @description subscription */
  "body.subscription": definitions["subscription"];
  "rowFilter.subscription.id": string;
  "rowFilter.subscription.created_at": string;
  "rowFilter.subscription.updated_at": string;
  "rowFilter.subscription.user_id": string;
  /** @description user */
  "body.user": definitions["user"];
  "rowFilter.user.id": string;
  "rowFilter.user.username": string;
  "rowFilter.user.created_at": string;
  "rowFilter.user.updated_at": string;
  /** @description social_platform */
  "body.social_platform": definitions["social_platform"];
  "rowFilter.social_platform.id": string;
  "rowFilter.social_platform.created_at": string;
  "rowFilter.social_platform.updated_at": string;
  "rowFilter.social_platform.name": string;
}

export interface operations {}

export interface external {}
